"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   signup: () => (/* binding */ signup)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Create API client with proper error handling\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: \"http://localhost:3001/api\" || 0,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    timeout: 10000\n});\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use((config)=>{\n    if (true) {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n        }\n    }\n    return config;\n}, (error)=>Promise.reject(error));\n// Handle authentication errors consistently\napi.interceptors.response.use((response)=>response, (error)=>{\n    // Add more detailed error information for auth errors\n    if (error.response) {\n        var _error_response_data;\n        if (error.response.status === 401) {\n            // Clear tokens on auth failure\n            if (true) {\n                localStorage.removeItem('auth_token');\n            }\n            // Add a user-friendly message\n            error.userMessage = 'Your session has expired. Please login again.';\n        }\n        if (error.response.status === 400 && ((_error_response_data = error.response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message)) {\n            // Pass along the server message\n            error.userMessage = error.response.data.message;\n        }\n    }\n    return Promise.reject(error);\n});\nconst login = async (email, password)=>{\n    try {\n        const response = await api.post('/auth/login', {\n            email,\n            password\n        });\n        return response.data;\n    } catch (error) {\n        var _error_response_data, _error_response;\n        // Log for debugging\n        console.error('Login error details:', error);\n        // Create mock response for development\n        if ( true && !api.defaults.baseURL) {\n            console.warn('Using mock login response in development');\n            // In development, simulate a successful login\n            return {\n                token: 'mock-jwt-token',\n                user: {\n                    id: '123',\n                    name: 'Test User',\n                    email: email\n                }\n            };\n        }\n        // Throw a more detailed error\n        const errorMessage = error.userMessage || ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || error.message || 'Login failed';\n        const errorObj = new Error(errorMessage);\n        errorObj.response = error.response;\n        errorObj.request = error.request;\n        throw errorObj;\n    }\n};\nconst signup = async (name, email, password)=>{\n    try {\n        const response = await api.post('/auth/signup', {\n            name,\n            email,\n            password\n        });\n        return response.data;\n    } catch (error) {\n        var _error_response, _error_response_data, _error_response1;\n        // Log for debugging\n        console.error('Signup error details:', error);\n        // Create mock response for development\n        if ( true && !api.defaults.baseURL) {\n            console.warn('Using mock signup response in development');\n            // In development, simulate a successful signup\n            return {\n                token: 'mock-jwt-token',\n                user: {\n                    id: '123',\n                    name: name,\n                    email: email\n                }\n            };\n        }\n        // Check for email already exists error\n        if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 400 && error.response.data.message.includes('already exists')) {\n            const errorObj = new Error('This email is already registered');\n            errorObj.response = error.response;\n            errorObj.request = error.request;\n            throw errorObj;\n        }\n        // Throw a more detailed error\n        const errorMessage = error.userMessage || ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : (_error_response_data = _error_response1.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || error.message || 'Signup failed';\n        const errorObj = new Error(errorMessage);\n        errorObj.response = error.response;\n        errorObj.request = error.request;\n        throw errorObj;\n    }\n};\nconst logout = ()=>{\n    if (true) {\n        localStorage.removeItem('auth_token');\n    }\n};\nconst getCurrentUser = async ()=>{\n    try {\n        const response = await api.get('/auth/me');\n        return response.data;\n    } catch (error) {\n        console.error('Get current user error:', error);\n        // Create mock response for development\n        if ( true && !api.defaults.baseURL) {\n            const userData =  true ? JSON.parse(localStorage.getItem('user_preferences') || '{}') : 0;\n            // In development, simulate a successful user fetch\n            return {\n                id: '123',\n                name: userData.name || 'Test User',\n                email: userData.email || 'test@example.com',\n                preferences: userData.foodPreferences || []\n            };\n        }\n        return null;\n    }\n};\n// Check if the user is authenticated\nconst isAuthenticated = ()=>{\n    if (false) {}\n    return !!localStorage.getItem('auth_token');\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.js\n"));

/***/ })

});