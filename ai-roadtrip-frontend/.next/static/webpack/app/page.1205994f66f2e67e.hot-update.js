"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getRecommendations: () => (/* binding */ getRecommendations)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: process.env.API_URL || 'http://localhost:3001/api',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use((config)=>{\n    if (true) {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n        }\n    }\n    return config;\n}, (error)=>Promise.reject(error));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\nconst getRecommendations = async (tripData)=>{\n    try {\n        // Set a short timeout for the API request to avoid long waiting\n        const res = await api.post('/public/getRecommendations', tripData, {\n            timeout: 3000 // 3 seconds timeout\n        });\n        return res.data;\n    } catch (error) {\n        console.error('Error fetching recommendations:', error);\n        // Create fallback data for any error (network, timeout, etc.)\n        console.log('Using fallback recommendations data');\n        // Get coordinates using the Geocoding API if available\n        let startCoords;\n        let destCoords;\n        // Try to geocode the addresses if Google Maps is available\n        if (window.google && window.google.maps && window.google.maps.Geocoder) {\n            const geocoder = new window.google.maps.Geocoder();\n            try {\n                // Try to geocode start location\n                const startResult = await new Promise((resolve, reject)=>{\n                    geocoder.geocode({\n                        address: tripData.start\n                    }, (results, status)=>{\n                        if (status === 'OK' && results[0]) {\n                            resolve(results[0]);\n                        } else {\n                            reject(status);\n                        }\n                    });\n                });\n                // If successful, update the start coordinates\n                startCoords = {\n                    lat: startResult.geometry.location.lat(),\n                    lng: startResult.geometry.location.lng()\n                };\n                // Try to geocode destination\n                const destResult = await new Promise((resolve, reject)=>{\n                    geocoder.geocode({\n                        address: tripData.destination\n                    }, (results, status)=>{\n                        if (status === 'OK' && results[0]) {\n                            resolve(results[0]);\n                        } else {\n                            reject(status);\n                        }\n                    });\n                });\n                // If successful, update the destination coordinates\n                destCoords = {\n                    lat: destResult.geometry.location.lat(),\n                    lng: destResult.geometry.location.lng()\n                };\n            } catch (geocodeError) {\n                console.error('Geocoding error:', geocodeError);\n            // Continue with default coordinates if geocoding fails\n            }\n        }\n        // Calculate a midpoint for a restaurant stop\n        const midLat = (startCoords.lat + destCoords.lat) / 2;\n        const midLng = (startCoords.lng + destCoords.lng) / 2;\n        // Create a mock route response\n        return {\n            route: {\n                stops: [\n                    {\n                        location: startCoords,\n                        type: 'start',\n                        name: tripData.start\n                    },\n                    {\n                        location: {\n                            lat: midLat + (Math.random() * 0.05 - 0.025),\n                            lng: midLng + (Math.random() * 0.05 - 0.025)\n                        },\n                        type: 'restaurant',\n                        name: 'Sample Restaurant'\n                    },\n                    {\n                        location: {\n                            lat: midLat + (Math.random() * 0.05 - 0.025),\n                            lng: midLng + (Math.random() * 0.05 - 0.025)\n                        },\n                        type: 'gas',\n                        name: 'Sample Gas Station'\n                    },\n                    {\n                        location: destCoords,\n                        type: 'destination',\n                        name: tripData.destination\n                    }\n                ],\n                googleMapsLink: \"https://www.google.com/maps/dir/\".concat(encodeURIComponent(tripData.start), \"/\").concat(encodeURIComponent(tripData.destination), \"/\")\n            }\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.js\n"));

/***/ })

});