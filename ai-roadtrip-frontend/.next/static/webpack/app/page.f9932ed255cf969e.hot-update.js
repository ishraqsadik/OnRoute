"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getRecommendations: () => (/* binding */ getRecommendations)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: process.env.API_URL || 'http://localhost:3001/api',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use((config)=>{\n    if (true) {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            config.headers.Authorization = \"Bearer \".concat(token);\n        }\n    }\n    return config;\n}, (error)=>Promise.reject(error));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (api);\nconst getRecommendations = async (tripData)=>{\n    try {\n        // Set a short timeout for the API request to avoid long waiting\n        const res = await api.post('/public/getRecommendations', tripData, {\n            timeout: 3000 // 3 seconds timeout\n        });\n        return res.data;\n    } catch (error) {\n        console.error('Error fetching recommendations:', error);\n        // Create fallback data for any error (network, timeout, etc.)\n        console.log('Using fallback recommendations data');\n        // Default coordinates in case geocoding fails\n        let startCoords = {\n            lat: 37.7749,\n            lng: -122.4194\n        }; // Default: San Francisco\n        let destCoords = {\n            lat: 34.0522,\n            lng: -118.2437\n        }; // Default: Los Angeles\n        // Try to geocode the addresses if Google Maps is available\n        if (window.google && window.google.maps && window.google.maps.Geocoder) {\n            const geocoder = new window.google.maps.Geocoder();\n            try {\n                // Try to geocode start location\n                const startResult = await new Promise((resolve, reject)=>{\n                    geocoder.geocode({\n                        address: tripData.start\n                    }, (results, status)=>{\n                        if (status === 'OK' && results[0]) {\n                            resolve(results[0]);\n                        } else {\n                            reject(status);\n                        }\n                    });\n                });\n                // If successful, update the start coordinates\n                startCoords = {\n                    lat: startResult.geometry.location.lat(),\n                    lng: startResult.geometry.location.lng()\n                };\n                // Try to geocode destination\n                const destResult = await new Promise((resolve, reject)=>{\n                    geocoder.geocode({\n                        address: tripData.destination\n                    }, (results, status)=>{\n                        if (status === 'OK' && results[0]) {\n                            resolve(results[0]);\n                        } else {\n                            reject(status);\n                        }\n                    });\n                });\n                // If successful, update the destination coordinates\n                destCoords = {\n                    lat: destResult.geometry.location.lat(),\n                    lng: destResult.geometry.location.lng()\n                };\n                console.log('Successfully geocoded locations:', {\n                    start: startCoords,\n                    destination: destCoords\n                });\n            } catch (geocodeError) {\n                console.error('Geocoding error:', geocodeError);\n                // Continue with default coordinates if geocoding fails\n                console.log('Using default coordinates due to geocoding failure');\n            }\n        } else {\n            console.log('Google Maps Geocoder not available, using default coordinates');\n        }\n        // Calculate a midpoint for a restaurant stop\n        const midLat = (startCoords.lat + destCoords.lat) / 2;\n        const midLng = (startCoords.lng + destCoords.lng) / 2;\n        // Add some randomness to create two different midpoint stops\n        const restaurantStop = {\n            location: {\n                lat: midLat + (Math.random() * 0.05 - 0.025),\n                lng: midLng + (Math.random() * 0.05 - 0.025)\n            },\n            type: 'restaurant',\n            name: 'Recommended Restaurant'\n        };\n        const gasStop = {\n            location: {\n                lat: midLat + (Math.random() * 0.05 - 0.025),\n                lng: midLng + (Math.random() * 0.05 - 0.025)\n            },\n            type: 'gas',\n            name: 'Recommended Gas Station'\n        };\n        // Create a mock route response\n        return {\n            route: {\n                stops: [\n                    {\n                        location: startCoords,\n                        type: 'start',\n                        name: tripData.start\n                    },\n                    // Based on fuel status, maybe add gas station earlier in the route\n                    parseInt(tripData.fuelStatus) < 100 ? gasStop : restaurantStop,\n                    parseInt(tripData.fuelStatus) >= 100 ? gasStop : restaurantStop,\n                    {\n                        location: destCoords,\n                        type: 'destination',\n                        name: tripData.destination\n                    }\n                ],\n                googleMapsLink: \"https://www.google.com/maps/dir/\".concat(encodeURIComponent(tripData.start), \"/\").concat(encodeURIComponent(tripData.destination), \"/\")\n            }\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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d0JBQVl1QixNQUFNO3dCQUFlQyxNQUFNbEMsU0FBUzBCLFdBQVc7b0JBQUM7aUJBQ3pFO2dCQUNEYyxnQkFBZ0IsbUNBQXlFQyxPQUF0Q0EsbUJBQW1CekMsU0FBU29CLEtBQUssR0FBRSxLQUE0QyxPQUF6Q3FCLG1CQUFtQnpDLFNBQVMwQixXQUFXLEdBQUU7WUFDcEk7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiRDpcXFN0dWRpZXNcXENvZGluZ1xcT25Sb3V0ZVxcYWktcm9hZHRyaXAtZnJvbnRlbmRcXGxpYlxcYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcblxyXG5jb25zdCBhcGkgPSBheGlvcy5jcmVhdGUoe1xyXG4gIGJhc2VVUkw6IHByb2Nlc3MuZW52LkFQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS9hcGknLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgfSxcclxufSk7XHJcblxyXG4vLyBBZGQgYSByZXF1ZXN0IGludGVyY2VwdG9yIHRvIGluY2x1ZGUgdGhlIGF1dGggdG9rZW4gaW4gcmVxdWVzdHNcclxuYXBpLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShcclxuICAoY29uZmlnKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHsgLy8gQ2hlY2sgaWYgcnVubmluZyBvbiBjbGllbnQgc2lkZVxyXG4gICAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhdXRoX3Rva2VuJyk7XHJcbiAgICAgIGlmICh0b2tlbikge1xyXG4gICAgICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSBgQmVhcmVyICR7dG9rZW59YDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvbmZpZztcclxuICB9LFxyXG4gIChlcnJvcikgPT4gUHJvbWlzZS5yZWplY3QoZXJyb3IpXHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcGk7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0UmVjb21tZW5kYXRpb25zID0gYXN5bmMgKHRyaXBEYXRhKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFNldCBhIHNob3J0IHRpbWVvdXQgZm9yIHRoZSBBUEkgcmVxdWVzdCB0byBhdm9pZCBsb25nIHdhaXRpbmdcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGFwaS5wb3N0KCcvcHVibGljL2dldFJlY29tbWVuZGF0aW9ucycsIHRyaXBEYXRhLCB7XHJcbiAgICAgIHRpbWVvdXQ6IDMwMDAgLy8gMyBzZWNvbmRzIHRpbWVvdXRcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHJlcy5kYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyByZWNvbW1lbmRhdGlvbnM6JywgZXJyb3IpO1xyXG4gICAgXHJcbiAgICAvLyBDcmVhdGUgZmFsbGJhY2sgZGF0YSBmb3IgYW55IGVycm9yIChuZXR3b3JrLCB0aW1lb3V0LCBldGMuKVxyXG4gICAgY29uc29sZS5sb2coJ1VzaW5nIGZhbGxiYWNrIHJlY29tbWVuZGF0aW9ucyBkYXRhJyk7XHJcbiAgICBcclxuICAgIC8vIERlZmF1bHQgY29vcmRpbmF0ZXMgaW4gY2FzZSBnZW9jb2RpbmcgZmFpbHNcclxuICAgIGxldCBzdGFydENvb3JkcyA9IHsgbGF0OiAzNy43NzQ5LCBsbmc6IC0xMjIuNDE5NCB9OyAvLyBEZWZhdWx0OiBTYW4gRnJhbmNpc2NvXHJcbiAgICBsZXQgZGVzdENvb3JkcyA9IHsgbGF0OiAzNC4wNTIyLCBsbmc6IC0xMTguMjQzNyB9OyAgLy8gRGVmYXVsdDogTG9zIEFuZ2VsZXNcclxuICAgIFxyXG4gICAgLy8gVHJ5IHRvIGdlb2NvZGUgdGhlIGFkZHJlc3NlcyBpZiBHb29nbGUgTWFwcyBpcyBhdmFpbGFibGVcclxuICAgIGlmICh3aW5kb3cuZ29vZ2xlICYmIHdpbmRvdy5nb29nbGUubWFwcyAmJiB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXIpIHtcclxuICAgICAgY29uc3QgZ2VvY29kZXIgPSBuZXcgd2luZG93Lmdvb2dsZS5tYXBzLkdlb2NvZGVyKCk7XHJcbiAgICAgIFxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIC8vIFRyeSB0byBnZW9jb2RlIHN0YXJ0IGxvY2F0aW9uXHJcbiAgICAgICAgY29uc3Qgc3RhcnRSZXN1bHQgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICBnZW9jb2Rlci5nZW9jb2RlKHsgYWRkcmVzczogdHJpcERhdGEuc3RhcnQgfSwgKHJlc3VsdHMsIHN0YXR1cykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09PSAnT0snICYmIHJlc3VsdHNbMF0pIHtcclxuICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdHNbMF0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHJlamVjdChzdGF0dXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBJZiBzdWNjZXNzZnVsLCB1cGRhdGUgdGhlIHN0YXJ0IGNvb3JkaW5hdGVzXHJcbiAgICAgICAgc3RhcnRDb29yZHMgPSB7XHJcbiAgICAgICAgICBsYXQ6IHN0YXJ0UmVzdWx0Lmdlb21ldHJ5LmxvY2F0aW9uLmxhdCgpLFxyXG4gICAgICAgICAgbG5nOiBzdGFydFJlc3VsdC5nZW9tZXRyeS5sb2NhdGlvbi5sbmcoKVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gVHJ5IHRvIGdlb2NvZGUgZGVzdGluYXRpb25cclxuICAgICAgICBjb25zdCBkZXN0UmVzdWx0ID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7IGFkZHJlc3M6IHRyaXBEYXRhLmRlc3RpbmF0aW9uIH0sIChyZXN1bHRzLCBzdGF0dXMpID0+IHtcclxuICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gJ09LJyAmJiByZXN1bHRzWzBdKSB7XHJcbiAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHRzWzBdKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICByZWplY3Qoc3RhdHVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gSWYgc3VjY2Vzc2Z1bCwgdXBkYXRlIHRoZSBkZXN0aW5hdGlvbiBjb29yZGluYXRlc1xyXG4gICAgICAgIGRlc3RDb29yZHMgPSB7XHJcbiAgICAgICAgICBsYXQ6IGRlc3RSZXN1bHQuZ2VvbWV0cnkubG9jYXRpb24ubGF0KCksXHJcbiAgICAgICAgICBsbmc6IGRlc3RSZXN1bHQuZ2VvbWV0cnkubG9jYXRpb24ubG5nKClcclxuICAgICAgICB9O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgZ2VvY29kZWQgbG9jYXRpb25zOicsIHtcclxuICAgICAgICAgIHN0YXJ0OiBzdGFydENvb3JkcyxcclxuICAgICAgICAgIGRlc3RpbmF0aW9uOiBkZXN0Q29vcmRzXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGdlb2NvZGVFcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0dlb2NvZGluZyBlcnJvcjonLCBnZW9jb2RlRXJyb3IpO1xyXG4gICAgICAgIC8vIENvbnRpbnVlIHdpdGggZGVmYXVsdCBjb29yZGluYXRlcyBpZiBnZW9jb2RpbmcgZmFpbHNcclxuICAgICAgICBjb25zb2xlLmxvZygnVXNpbmcgZGVmYXVsdCBjb29yZGluYXRlcyBkdWUgdG8gZ2VvY29kaW5nIGZhaWx1cmUnKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5sb2coJ0dvb2dsZSBNYXBzIEdlb2NvZGVyIG5vdCBhdmFpbGFibGUsIHVzaW5nIGRlZmF1bHQgY29vcmRpbmF0ZXMnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gQ2FsY3VsYXRlIGEgbWlkcG9pbnQgZm9yIGEgcmVzdGF1cmFudCBzdG9wXHJcbiAgICBjb25zdCBtaWRMYXQgPSAoc3RhcnRDb29yZHMubGF0ICsgZGVzdENvb3Jkcy5sYXQpIC8gMjtcclxuICAgIGNvbnN0IG1pZExuZyA9IChzdGFydENvb3Jkcy5sbmcgKyBkZXN0Q29vcmRzLmxuZykgLyAyO1xyXG4gICAgXHJcbiAgICAvLyBBZGQgc29tZSByYW5kb21uZXNzIHRvIGNyZWF0ZSB0d28gZGlmZmVyZW50IG1pZHBvaW50IHN0b3BzXHJcbiAgICBjb25zdCByZXN0YXVyYW50U3RvcCA9IHtcclxuICAgICAgbG9jYXRpb246IHsgXHJcbiAgICAgICAgbGF0OiBtaWRMYXQgKyAoTWF0aC5yYW5kb20oKSAqIDAuMDUgLSAwLjAyNSksXHJcbiAgICAgICAgbG5nOiBtaWRMbmcgKyAoTWF0aC5yYW5kb20oKSAqIDAuMDUgLSAwLjAyNSlcclxuICAgICAgfSwgXHJcbiAgICAgIHR5cGU6ICdyZXN0YXVyYW50JywgXHJcbiAgICAgIG5hbWU6ICdSZWNvbW1lbmRlZCBSZXN0YXVyYW50J1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgY29uc3QgZ2FzU3RvcCA9IHtcclxuICAgICAgbG9jYXRpb246IHsgXHJcbiAgICAgICAgbGF0OiBtaWRMYXQgKyAoTWF0aC5yYW5kb20oKSAqIDAuMDUgLSAwLjAyNSksXHJcbiAgICAgICAgbG5nOiBtaWRMbmcgKyAoTWF0aC5yYW5kb20oKSAqIDAuMDUgLSAwLjAyNSlcclxuICAgICAgfSwgXHJcbiAgICAgIHR5cGU6ICdnYXMnLCBcclxuICAgICAgbmFtZTogJ1JlY29tbWVuZGVkIEdhcyBTdGF0aW9uJ1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgLy8gQ3JlYXRlIGEgbW9jayByb3V0ZSByZXNwb25zZVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcm91dGU6IHtcclxuICAgICAgICBzdG9wczogW1xyXG4gICAgICAgICAgeyBsb2NhdGlvbjogc3RhcnRDb29yZHMsIHR5cGU6ICdzdGFydCcsIG5hbWU6IHRyaXBEYXRhLnN0YXJ0IH0sXHJcbiAgICAgICAgICAvLyBCYXNlZCBvbiBmdWVsIHN0YXR1cywgbWF5YmUgYWRkIGdhcyBzdGF0aW9uIGVhcmxpZXIgaW4gdGhlIHJvdXRlXHJcbiAgICAgICAgICBwYXJzZUludCh0cmlwRGF0YS5mdWVsU3RhdHVzKSA8IDEwMCA/IGdhc1N0b3AgOiByZXN0YXVyYW50U3RvcCxcclxuICAgICAgICAgIHBhcnNlSW50KHRyaXBEYXRhLmZ1ZWxTdGF0dXMpID49IDEwMCA/IGdhc1N0b3AgOiByZXN0YXVyYW50U3RvcCxcclxuICAgICAgICAgIHsgbG9jYXRpb246IGRlc3RDb29yZHMsIHR5cGU6ICdkZXN0aW5hdGlvbicsIG5hbWU6IHRyaXBEYXRhLmRlc3RpbmF0aW9uIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGdvb2dsZU1hcHNMaW5rOiBgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL2Rpci8ke2VuY29kZVVSSUNvbXBvbmVudCh0cmlwRGF0YS5zdGFydCl9LyR7ZW5jb2RlVVJJQ29tcG9uZW50KHRyaXBEYXRhLmRlc3RpbmF0aW9uKX0vYFxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxufTtcclxuIl0sIm5hbWVzIjpbImF4aW9zIiwiYXBpIiwiY3JlYXRlIiwiYmFzZVVSTCIsInByb2Nlc3MiLCJlbnYiLCJBUElfVVJMIiwiaGVhZGVycyIsImludGVyY2VwdG9ycyIsInJlcXVlc3QiLCJ1c2UiLCJjb25maWciLCJ0b2tlbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJBdXRob3JpemF0aW9uIiwiZXJyb3IiLCJQcm9taXNlIiwicmVqZWN0IiwiZ2V0UmVjb21tZW5kYXRpb25zIiwidHJpcERhdGEiLCJyZXMiLCJwb3N0IiwidGltZW91dCIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwic3RhcnRDb29yZHMiLCJsYXQiLCJsbmciLCJkZXN0Q29vcmRzIiwid2luZG93IiwiZ29vZ2xlIiwibWFwcyIsIkdlb2NvZGVyIiwiZ2VvY29kZXIiLCJzdGFydFJlc3VsdCIsInJlc29sdmUiLCJnZW9jb2RlIiwiYWRkcmVzcyIsInN0YXJ0IiwicmVzdWx0cyIsInN0YXR1cyIsImdlb21ldHJ5IiwibG9jYXRpb24iLCJkZXN0UmVzdWx0IiwiZGVzdGluYXRpb24iLCJnZW9jb2RlRXJyb3IiLCJtaWRMYXQiLCJtaWRMbmciLCJyZXN0YXVyYW50U3RvcCIsIk1hdGgiLCJyYW5kb20iLCJ0eXBlIiwibmFtZSIsImdhc1N0b3AiLCJyb3V0ZSIsInN0b3BzIiwicGFyc2VJbnQiLCJmdWVsU3RhdHVzIiwiZ29vZ2xlTWFwc0xpbmsiLCJlbmNvZGVVUklDb21wb25lbnQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.js\n"));

/***/ })

});